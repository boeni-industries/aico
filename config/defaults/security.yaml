encryption:
  algorithm: "AES-256-GCM"
  key_length: 32  # 256-bit keys
  salt_length: 16  # 128-bit salt (was 32, corrected to match code)
  
  # Key derivation settings
  key_derivation:
    # PBKDF2 settings (for LibSQL compatibility)
    pbkdf2:
      iterations: 100000
    
    # Argon2id settings (for other databases)
    argon2id:
      # Different iteration counts for different use cases
      database_operations: 2    # Balanced for database operations
      file_operations: 1        # Lighter for file operations  
      derived_keys: 2           # For derived keys
      master_key: 3             # For master key derivation
      
      # Memory and parallelism settings (different for each use case)
      memory_cost:
        database_operations: 262144   # 256MB in KiB (256*1024)
        file_operations: 131072       # 128MB in KiB (128*1024)
        derived_keys: 262144          # 256MB in KiB (256*1024)
        master_key: 1048576           # 1GB in KiB (1024*1024)
      
      lanes:
        database_operations: 2        # 2 threads
        file_operations: 2            # 2 threads
        derived_keys: 2               # 2 threads
        master_key: 4                 # 4 threads (parallelism)
      
      length: 32                      # 256-bit output

password_policy:
  min_length: 12
  require_complexity: true

pin_policy:
  min_length: 4
  max_length: 8
  require_numeric: true

authentication:
  password_hashing:
    algorithm: "bcrypt"
    rounds: 12  # Cost factor for bcrypt (2^12 iterations)
  session_timeout: 3600
  max_failed_attempts: 5
  lockout_duration: 300

cli:
  session_timeout_minutes: 30
  extend_on_activity: true

audit:
  enabled: true
  retention_days: 90
  log_level: "standard"

# Role-Based Access Control (RBAC) Configuration
rbac:
  enabled: true
  default_policy: "deny"  # Deny by default, explicit grants required
  
  # Role definitions with permissions
  roles:
    # Admin role - full system access
    admin:
      - "admin.*"           # All admin operations
      - "system.*"          # System management
      - "logs.*"            # Log management
      - "config.*"          # Configuration management
      - "users.*"           # User management
      - "audit.*"           # Audit access
    
    # User role - standard user permissions
    user:
      - "conversation.*"    # Chat and conversation
      - "memory.read"       # Read memory
      - "personality.read"  # Read personality
      - "profile.*"         # Own profile management
    
    # Service role - for internal services
    service:
      - "system.health"     # Health checks
      - "logs.write"        # Write logs
      - "events.*"          # Event handling
    
    # CLI role - for CLI operations
    cli:
      - "admin.*"           # CLI gets admin access
      - "system.*"          # Full system access for CLI
      - "debug.*"           # Debug operations

# Authorization policies for specific resources
authorization:
  # Resource-based permissions
  resources:
    logs:
      read: ["admin", "service"]
      write: ["admin", "service"] 
      delete: ["admin"]
    
    config:
      read: ["admin", "service"]
      write: ["admin"]
      reload: ["admin"]
    
    users:
      read: ["admin"]
      write: ["admin"]
      create: ["admin"]
      delete: ["admin"]

